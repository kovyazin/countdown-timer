{"version":3,"sources":["reducers/reducer.js","reducers/types.js","store.js","components/Countdown/SVGCircle/utils.js","components/Countdown/SVGCircle/SVGCircle.styles.js","components/Countdown/SVGCircle/SVGCircle.js","components/Countdown/Countdown.styles.js","components/Countdown/utils.js","components/Countdown/Countdown.js","components/TableEvents/Item/Item.styles.js","components/TableEvents/Item/Item.js","components/TableEvents/TableEvents.styles.js","components/TableEvents/TableEvents.js","reducers/actions.js","containers/TableEventsContainer.js","components/ModalEdit/ModalEdit.styles.js","components/ModalEdit/ModalEdit.js","containers/ModalEditContainer.js","components/EventForm/EventForm.styles.js","components/EventForm/EventForm.js","containers/EventFormContainer.js","components/Message/Message.styles.js","components/Message/Message.js","containers/MessageContainer.js","components/UI/Section.js","components/App/App.styles.js","components/App/App.js","index.js"],"names":["initialState","events","messages","reducer","state","type","payload","map","event","isActive","id","nanoid","name","date","getTime","isEdit","dateStart","filter","store","createStore","window","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","describeArc","startAngle","endAngle","start","end","largeArcFlag","join","Styled","CountdownSVG","styled","svg","CountdownSVGCircle","fill","stroke","strokeWidth","d","Title","div","WrapperTimer","Counter","Number","span","Text","calcDuration","dateEnd","diff","moment","duration","mapNumber","number","inMin","inMax","outMin","outMax","Countdown","currentEvent","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","diffDays","floor","asDays","updateCountdown","Date","now","useEffect","timerId","setInterval","clearInterval","daysRadius","hoursRadius","minutesRadius","secondsRadius","TableRow","tr","props","active","Button","button","TableEventsItem","idx","setActiveEvent","deleteEvent","setEditEventMode","addMessage","deleteAndSetActiveFirstEvent","length","find","key","onClick","format","e","stopPropagation","className","Table","table","TableEvents","connect","Overlay","Modal","FormGroup","Label","label","Input","input","DatePickerWrapper","ButtonsGroup","ButtonSave","ButtonClose","ModalEdit","changeEvent","editableEvent","nameInputValue","setNameInputValue","dateInputValue","setDateInputValue","onSubmit","preventDefault","value","onChange","target","selected","timeInputLabel","dateFormat","showTimeInput","Form","form","WarningMessage","DatePicker","EventForm","addEvent","inputValue","setInputValue","error","setError","setDate","placeholder","Wrapper","Message","deleteMessage","Section","setEvents","setMessages","eventsStorage","localStorage","getItem","messagesStorage","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56b7ab2f.chunk.js","sourcesContent":["import nanoid from 'nanoid'\r\nimport {\r\n  ADD_EVENT,\r\n  ADD_MESSAGE,\r\n  CHANGE_EVENT,\r\n  DELETE_EVENT,\r\n  DELETE_MESSAGE,\r\n  SET_ACTIVE_EVENT,\r\n  SET_EDIT_EVENT_MODE,\r\n  SET_EVENTS,\r\n  SET_MESSAGES\r\n} from './types'\r\n\r\nconst initialState = {\r\n  events: [],\r\n  messages: []\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: [...payload]\r\n      }\r\n    case ADD_EVENT:\r\n      return {\r\n        ...state,\r\n        events: [\r\n          ...state.events.map(event => ({ ...event, isActive: false })),\r\n          {\r\n            id: nanoid(),\r\n            name: payload.name,\r\n            date: payload.date.getTime(),\r\n            isActive: payload.isActive,\r\n            isEdit: false,\r\n            dateStart: payload.dateStart.getTime()\r\n          }\r\n        ]\r\n      }\r\n    case SET_ACTIVE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event => {\r\n          if (event.id === payload) {\r\n            return { ...event, isActive: true }\r\n          }\r\n          return { ...event, isActive: false }\r\n        })\r\n      }\r\n    case DELETE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(({ id }) => id !== payload)\r\n      }\r\n    case SET_EDIT_EVENT_MODE:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event => {\r\n          if (event.id === payload.id)\r\n            return { ...event, isEdit: payload.isEdit }\r\n          return event\r\n        })\r\n      }\r\n    case CHANGE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event => {\r\n          if (event.id === payload.id)\r\n            return {\r\n              ...event,\r\n              name: payload.name,\r\n              date: payload.date.getTime(),\r\n              dateStart: payload.dateStart.getTime()\r\n            }\r\n          return event\r\n        })\r\n      }\r\n    case SET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: [...payload]\r\n      }\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [\r\n          ...state.messages,\r\n          { id: payload.id, name: payload.name, date: payload.date }\r\n        ]\r\n      }\r\n    case DELETE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(({ id }) => id !== payload)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const SET_EVENTS = 'SET_EVENTS'\nexport const ADD_EVENT = 'ADD_EVENT'\nexport const SET_ACTIVE_EVENT = 'SET_ACTIVE_EVENT'\nexport const DELETE_EVENT = 'DELETE_EVENT'\nexport const SET_EDIT_EVENT_MODE = 'SET_EDIT_EVENT_MODE'\nexport const CHANGE_EVENT = 'CHANGE_EVENT'\nexport const SET_MESSAGES = 'SET_MESSAGES'\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\n","import { createStore } from 'redux'\nimport reducer from './reducers/reducer'\n\nconst store = createStore(reducer)\n\nwindow.store = store\n\nexport default store\n","export const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\r\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0\r\n\r\n  return {\r\n    x: centerX + radius * Math.cos(angleInRadians),\r\n    y: centerY + radius * Math.sin(angleInRadians)\r\n  }\r\n}\r\n\r\nexport default polarToCartesian\r\n\r\nexport const describeArc = (x, y, radius, startAngle, endAngle) => {\r\n  const start = polarToCartesian(x, y, radius, endAngle)\r\n  const end = polarToCartesian(x, y, radius, startAngle)\r\n\r\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1'\r\n\r\n  const d = [\r\n    'M',\r\n    start.x,\r\n    start.y,\r\n    'A',\r\n    radius,\r\n    radius,\r\n    0,\r\n    largeArcFlag,\r\n    0,\r\n    end.x,\r\n    end.y\r\n  ].join(' ')\r\n\r\n  return d\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst CountdownSVG = styled.svg`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 200px;\r\n  height: 200px;\r\n`\r\n\r\nexport const Styled = { CountdownSVG }\r\n","/* Import libraries */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n/* Import others */\nimport { describeArc } from './utils'\nimport { Styled } from './SVGCircle.styles'\n\nconst CountdownSVGCircle = ({ radius }) => (\n  <Styled.CountdownSVG>\n    <path\n      fill=\"none\"\n      stroke=\"#dc5858\"\n      strokeWidth=\"10\"\n      d={describeArc(100, 100, 95, 0, radius)}\n    />\n  </Styled.CountdownSVG>\n)\n\nCountdownSVGCircle.propTypes = {\n  radius: PropTypes.number.isRequired\n}\n\nexport default CountdownSVGCircle\n","import styled from 'styled-components'\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 40px;\r\n  text-align: center;\r\n  font-size: 36px;\r\n  font-weight: 300;\r\n  color: #313131;\r\n\r\n  strong {\r\n    font-weight: 400;\r\n  }\r\n`\r\n\r\nconst WrapperTimer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Counter = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 200px;\r\n  height: 200px;\r\n  text-align: center;\r\n  color: #313131;\r\n`\r\n\r\nconst Number = styled.span`\r\n  font-size: 72px;\r\n  font-weight: 400;\r\n`\r\n\r\nconst Text = styled.span`\r\n  margin-top: -10px;\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const Styled = {\r\n  Title,\r\n  WrapperTimer,\r\n  Counter,\r\n  Number,\r\n  Text\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const calcDuration = (dateStart, dateEnd) => {\r\n  const diff = dateEnd - dateStart\r\n  return moment.duration(diff, 'milliseconds')\r\n}\r\n\r\nexport const mapNumber = (number, inMin, inMax, outMin, outMax) => {\r\n  return ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\r\n}\r\n","/* Import libraries */\r\nimport React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/* Import components */\r\nimport CountdownSVGCircle from './SVGCircle/SVGCircle'\r\n\r\n/* Import other */\r\nimport { Styled } from './Countdown.styles'\r\nimport { calcDuration, mapNumber } from './utils'\r\n\r\nconst Countdown = ({ currentEvent }) => {\r\n  const [days, setDays] = useState(null)\r\n  const [hours, setHours] = useState(null)\r\n  const [minutes, setMinutes] = useState(null)\r\n  const [seconds, setSeconds] = useState(null)\r\n  const diffDays = Math.floor(\r\n    calcDuration(currentEvent.dateStart, currentEvent.date).asDays()\r\n  )\r\n\r\n  const updateCountdown = () => {\r\n    const duration = calcDuration(Date.now(), currentEvent.date)\r\n\r\n    setDays(Math.floor(duration.asDays()))\r\n    setHours(duration.hours())\r\n    setMinutes(duration.minutes())\r\n    setSeconds(duration.seconds())\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateCountdown()\r\n    const timerId = setInterval(updateCountdown, 1000)\r\n    return () => clearInterval(timerId)\r\n  }, [currentEvent])\r\n\r\n  const daysRadius = mapNumber(days, diffDays + 1, 0, 0, 360)\r\n  const hoursRadius = mapNumber(hours, 24, 0, 0, 360)\r\n  const minutesRadius = mapNumber(minutes, 60, 0, 0, 360)\r\n  const secondsRadius = mapNumber(seconds, 60, 0, 0, 360)\r\n\r\n  return (\r\n    <>\r\n      <Styled.Title>\r\n        Before the event\r\n        <strong>\r\n          &nbsp;&quot;\r\n          {currentEvent.name}\r\n          &quot;&nbsp;\r\n        </strong>\r\n        left\r\n      </Styled.Title>\r\n      <Styled.WrapperTimer>\r\n        <Styled.Counter>\r\n          <CountdownSVGCircle radius={daysRadius} />\r\n          <Styled.Number>{days}</Styled.Number>\r\n          <Styled.Text>Days</Styled.Text>\r\n        </Styled.Counter>\r\n        <Styled.Counter>\r\n          <CountdownSVGCircle radius={hoursRadius} />\r\n          <Styled.Number>{hours}</Styled.Number>\r\n          <Styled.Text>Hours</Styled.Text>\r\n        </Styled.Counter>\r\n        <Styled.Counter>\r\n          <CountdownSVGCircle radius={minutesRadius} />\r\n          <Styled.Number>{minutes}</Styled.Number>\r\n          <Styled.Text>Minutes</Styled.Text>\r\n        </Styled.Counter>\r\n        <Styled.Counter>\r\n          <CountdownSVGCircle radius={secondsRadius} />\r\n          <Styled.Number>{seconds}</Styled.Number>\r\n          <Styled.Text>Seconds</Styled.Text>\r\n        </Styled.Counter>\r\n      </Styled.WrapperTimer>\r\n    </>\r\n  )\r\n}\r\n\r\nCountdown.propTypes = {\r\n  currentEvent: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    date: PropTypes.number,\r\n    isActive: PropTypes.bool,\r\n    dateStart: PropTypes.number\r\n  }).isRequired\r\n}\r\n\r\nexport default Countdown\r\n","import styled from 'styled-components'\r\n\r\nconst TableRow = styled.tr`\r\n  cursor: pointer;\r\n  background: ${props => (props.active ? '#dc5858' : 'none')};\r\n  color: ${props => (props.active ? '#fff' : '#313131')};\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin: 3px;\r\n  width: 32px;\r\n  height: 32px;\r\n  color: ${props => (props.active ? '#fff' : '#dc5858')};\r\n  background: none;\r\n  border: 1px solid ${props => (props.active ? '#fff' : '#dc5858')};\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const Styled = {\r\n  TableRow,\r\n  Button\r\n}\r\n","/* Import libraries */\r\nimport React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\n\r\n/* Import others */\r\nimport { Styled } from './Item.styles'\r\n\r\nconst TableEventsItem = ({\r\n  events,\r\n  event: { id, name, isActive, date },\r\n  idx,\r\n  setActiveEvent,\r\n  deleteEvent,\r\n  setEditEventMode,\r\n  addMessage\r\n}) => {\r\n  const deleteAndSetActiveFirstEvent = () => {\r\n    deleteEvent(id)\r\n    if (isActive && events.length - 1) {\r\n      setActiveEvent(events.find(event => event.id !== id).id)\r\n    }\r\n  }\r\n\r\n  const handleSetActive = () => setActiveEvent(id)\r\n\r\n  const handleDelete = e => {\r\n    e.stopPropagation()\r\n    deleteAndSetActiveFirstEvent()\r\n  }\r\n\r\n  const handleEdit = e => {\r\n    e.stopPropagation()\r\n    setEditEventMode({ isEdit: true, id })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(() => {\r\n      const duration = date - Date.now()\r\n      if (duration <= 0) {\r\n        deleteAndSetActiveFirstEvent()\r\n        addMessage({ id, name, date })\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timerId)\r\n  }, [date])\r\n\r\n  return (\r\n    <Styled.TableRow key={id} onClick={handleSetActive} active={isActive}>\r\n      <td>{idx + 1}</td>\r\n      <td>{name}</td>\r\n      <td>{moment(date).format('MMMM DD, 2020')}</td>\r\n      <td>\r\n        <Styled.Button type=\"button\" onClick={handleEdit} active={isActive}>\r\n          <i className=\"fas fa-pen\" />\r\n        </Styled.Button>\r\n        <Styled.Button type=\"button\" onClick={handleDelete} active={isActive}>\r\n          <i className=\"fas fa-times\" />\r\n        </Styled.Button>\r\n      </td>\r\n    </Styled.TableRow>\r\n  )\r\n}\r\n\r\nTableEventsItem.propTypes = {\r\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  event: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.string,\r\n    isActive: PropTypes.bool,\r\n    date: PropTypes.number\r\n  }).isRequired,\r\n  idx: PropTypes.number.isRequired,\r\n  setActiveEvent: PropTypes.func.isRequired,\r\n  deleteEvent: PropTypes.func.isRequired,\r\n  setEditEventMode: PropTypes.func.isRequired,\r\n  addMessage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TableEventsItem\r\n","import styled from 'styled-components'\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 40px;\r\n  text-align: center;\r\n  font-size: 36px;\r\n  font-weight: 300;\r\n  color: #313131;\r\n`\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 25px rgba(49, 49, 49, 0.15);\r\n\r\n  th {\r\n    padding: 20px 15px;\r\n    text-align: left;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    color: #313131;\r\n    border-bottom: 1px solid #d0d0d0;\r\n\r\n    &:last-child {\r\n      text-align: right;\r\n      padding-right: 30px;\r\n    }\r\n\r\n    &:first-child {\r\n      padding-left: 30px;\r\n    }\r\n  }\r\n\r\n  td {\r\n    padding: 15px;\r\n    font-size: 18px;\r\n    font-weight: 300;\r\n\r\n    &:last-child {\r\n      padding-right: 30px;\r\n      text-align: right;\r\n    }\r\n\r\n    &:first-child {\r\n      padding-left: 30px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Styled = {\r\n  Title,\r\n  Table\r\n}\r\n","/* Import libraries */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/* Import components */\r\nimport TableEventsItem from './Item/Item'\r\n\r\n/* Import others */\r\nimport { Styled } from './TableEvents.styles'\r\n\r\nconst TableEvents = ({\r\n  events,\r\n  setActiveEvent,\r\n  deleteEvent,\r\n  setEditEventMode,\r\n  addMessage\r\n}) => (\r\n  <>\r\n    <Styled.Title>All events</Styled.Title>\r\n    <Styled.Table>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {events.map((event, idx) => {\r\n          return (\r\n            <TableEventsItem\r\n              events={events}\r\n              event={event}\r\n              idx={idx}\r\n              setActiveEvent={setActiveEvent}\r\n              deleteEvent={deleteEvent}\r\n              setEditEventMode={setEditEventMode}\r\n              addMessage={addMessage}\r\n              key={event.id}\r\n            />\r\n          )\r\n        })}\r\n      </tbody>\r\n    </Styled.Table>\r\n  </>\r\n)\r\n\r\nTableEvents.propTypes = {\r\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setActiveEvent: PropTypes.func.isRequired,\r\n  deleteEvent: PropTypes.func.isRequired,\r\n  setEditEventMode: PropTypes.func.isRequired,\r\n  addMessage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TableEvents\r\n","import {\r\n  ADD_EVENT,\r\n  ADD_MESSAGE,\r\n  CHANGE_EVENT,\r\n  DELETE_EVENT,\r\n  DELETE_MESSAGE,\r\n  SET_ACTIVE_EVENT,\r\n  SET_EDIT_EVENT_MODE,\r\n  SET_EVENTS,\r\n  SET_MESSAGES\r\n} from './types'\r\n\r\nexport const setEvents = payload => ({\r\n  type: SET_EVENTS,\r\n  payload\r\n})\r\n\r\nexport const addEvent = payload => ({\r\n  type: ADD_EVENT,\r\n  payload\r\n})\r\n\r\nexport const setActiveEvent = payload => ({\r\n  type: SET_ACTIVE_EVENT,\r\n  payload\r\n})\r\n\r\nexport const deleteEvent = payload => ({\r\n  type: DELETE_EVENT,\r\n  payload\r\n})\r\n\r\nexport const setEditEventMode = payload => ({\r\n  type: SET_EDIT_EVENT_MODE,\r\n  payload\r\n})\r\n\r\nexport const changeEvent = payload => ({\r\n  type: CHANGE_EVENT,\r\n  payload\r\n})\r\n\r\nexport const setMessages = payload => ({\r\n  type: SET_MESSAGES,\r\n  payload\r\n})\r\n\r\nexport const addMessage = payload => ({\r\n  type: ADD_MESSAGE,\r\n  payload\r\n})\r\n\r\nexport const deleteMessage = payload => ({\r\n  type: DELETE_MESSAGE,\r\n  payload\r\n})\r\n","/* Import libraries */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n/* Import components */\nimport TableEvents from '../components/TableEvents/TableEvents'\n\n/* Import other */\nimport {\n  setActiveEvent,\n  setEditEventMode,\n  deleteEvent,\n  addMessage\n} from '../reducers/actions'\n\nconst TableEventsContainer = ({\n  events,\n  setActiveEvent,\n  deleteEvent,\n  setEditEventMode,\n  addMessage\n}) => {\n  return (\n    <TableEvents\n      events={events}\n      setActiveEvent={setActiveEvent}\n      deleteEvent={deleteEvent}\n      setEditEventMode={setEditEventMode}\n      addMessage={addMessage}\n    />\n  )\n}\n\nTableEventsContainer.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setActiveEvent: PropTypes.func.isRequired,\n  deleteEvent: PropTypes.func.isRequired,\n  setEditEventMode: PropTypes.func.isRequired,\n  addMessage: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ events }) => ({ events })\n\nexport default connect(mapStateToProps, {\n  setActiveEvent,\n  deleteEvent,\n  setEditEventMode,\n  addMessage\n})(TableEventsContainer)\n","import styled from 'styled-components'\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  z-index: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, 0.75);\r\n`\r\n\r\nconst Modal = styled.div`\r\n  width: 480px;\r\n  padding: 50px 45px;\r\n  background: #fff;\r\n  border-radius: 25px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 32px;\r\n  font-size: 48px;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  color: #313131;\r\n`\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #313131;\r\n`\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0 26px;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  color: #313131;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n`\r\n\r\nconst DatePickerWrapper = styled.div`\r\n  .react-datepicker-wrapper {\r\n    width: 100%;\r\n    height: 50px;\r\n  }\r\n\r\n  .react-datepicker__input-container {\r\n    height: 100%;\r\n\r\n    input {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      padding: 0 26px;\r\n      font-family: inherit;\r\n      font-size: 18px;\r\n      font-weight: 300;\r\n      color: #313131;\r\n      border: 1px solid #ddd;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ButtonsGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 180px;\r\n  height: 50px;\r\n  font-family: inherit;\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n`\r\n\r\nconst ButtonSave = styled(Button)`\r\n  color: #fff;\r\n  border: none;\r\n  background: #dc5858;\r\n`\r\n\r\nconst ButtonClose = styled(Button)`\r\n  color: #dc5858;\r\n  border: 1px solid #dc5858;\r\n  background: none;\r\n`\r\n\r\nexport const Styled = {\r\n  Overlay,\r\n  Title,\r\n  Button,\r\n  Input,\r\n  DatePickerWrapper,\r\n  ButtonClose,\r\n  ButtonSave,\r\n  ButtonsGroup,\r\n  FormGroup,\r\n  Label,\r\n  Modal\r\n}\r\n","/* Import libraries */\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n/* Import others */\r\nimport { Styled } from './ModalEdit.styles'\r\n\r\nconst ModalEdit = ({\r\n  setEditEventMode,\r\n  changeEvent,\r\n  editableEvent: { id, name, date }\r\n}) => {\r\n  const [nameInputValue, setNameInputValue] = useState(name)\r\n  const [dateInputValue, setDateInputValue] = useState(new Date(date))\r\n\r\n  const handleChangeName = e => {\r\n    setNameInputValue(e.target.value)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setEditEventMode({ isEdit: false, id })\r\n  }\r\n\r\n  const handleSave = e => {\r\n    e.preventDefault()\r\n    changeEvent({\r\n      id,\r\n      name: nameInputValue,\r\n      date: dateInputValue,\r\n      dateStart: new Date()\r\n    })\r\n    setEditEventMode({ isEdit: false, id })\r\n  }\r\n\r\n  return (\r\n    <Styled.Overlay>\r\n      <Styled.Modal>\r\n        <Styled.Title>Edit mode</Styled.Title>\r\n        <form onSubmit={handleSave}>\r\n          <Styled.FormGroup>\r\n            <Styled.Label>Name event:</Styled.Label>\r\n            <Styled.Input\r\n              type=\"text\"\r\n              value={nameInputValue}\r\n              onChange={handleChangeName}\r\n            />\r\n          </Styled.FormGroup>\r\n          <Styled.FormGroup>\r\n            <Styled.Label>Date event:</Styled.Label>\r\n            <Styled.DatePickerWrapper>\r\n              <DatePicker\r\n                selected={dateInputValue}\r\n                onChange={date => setDateInputValue(date)}\r\n                timeInputLabel=\"Time:\"\r\n                dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                showTimeInput\r\n              />\r\n            </Styled.DatePickerWrapper>\r\n          </Styled.FormGroup>\r\n          <Styled.ButtonsGroup>\r\n            <Styled.ButtonSave type=\"submit\">Save</Styled.ButtonSave>\r\n            <Styled.ButtonClose type=\"button\" onClick={handleClose}>\r\n              Cancel\r\n            </Styled.ButtonClose>\r\n          </Styled.ButtonsGroup>\r\n        </form>\r\n      </Styled.Modal>\r\n    </Styled.Overlay>\r\n  )\r\n}\r\n\r\nModalEdit.propTypes = {\r\n  editableEvent: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.string,\r\n    date: PropTypes.number,\r\n    isActive: PropTypes.bool,\r\n    isEdit: PropTypes.bool\r\n  }).isRequired,\r\n  changeEvent: PropTypes.func.isRequired,\r\n  setEditEventMode: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ModalEdit\r\n","/* Import libraries */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n/* Import components */\nimport ModalEdit from '../components/ModalEdit/ModalEdit'\n\n/* Import others */\nimport { setEditEventMode, changeEvent } from '../reducers/actions'\n\nconst ModalEditContainer = ({ setEditEventMode, changeEvent, ...props }) => {\n  return (\n    <ModalEdit\n      setEditEventMode={setEditEventMode}\n      changeEvent={changeEvent}\n      {...props}\n    />\n  )\n}\n\nModalEditContainer.propTypes = {\n  setEditEventMode: PropTypes.func.isRequired,\n  changeEvent: PropTypes.func.isRequired\n}\n\nexport default connect(null, { setEditEventMode, changeEvent })(\n  ModalEditContainer\n)\n","import styled from 'styled-components'\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n`\r\n\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  margin-right: 24px;\r\n  padding: 0 26px;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #000;\r\n  background: #fff;\r\n  border: 1px solid #d0d0d0;\r\n  border-radius: 5px;\r\n\r\n  &::placeholder {\r\n    color: #606060;\r\n    font-weight: 300;\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 176px;\r\n  height: 60px;\r\n  font-family: inherit;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  background: #dc5858;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst WarningMessage = styled.div`\r\n  position: absolute;\r\n  bottom: -28px;\r\n  left: 0;\r\n  z-index: 1;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  color: #dc5858;\r\n`\r\n\r\nconst DatePicker = styled.div`\r\n  margin-right: 24px;\r\n\r\n  .react-datepicker-wrapper {\r\n    height: 100%;\r\n  }\r\n\r\n  .react-datepicker__input-container {\r\n    height: 100%;\r\n\r\n    input {\r\n      height: 100%;\r\n      padding: 0 26px;\r\n      font-family: 'Roboto', Arial, Tahoma, sans-serif;\r\n      font-size: 18px;\r\n      font-weight: 300;\r\n      color: #313131;\r\n      background: #fff;\r\n      border: 1px solid #d0d0d0;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Styled = {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  WarningMessage,\r\n  DatePicker\r\n}\r\n","/* Import libraries */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\n/* Import others */\nimport { Styled } from './EventForm.styles'\n\nconst EventForm = ({ addEvent }) => {\n  const [inputValue, setInputValue] = useState('')\n  const [error, setError] = useState(null)\n  const [date, setDate] = useState(new Date())\n\n  const handleAdd = e => {\n    e.preventDefault()\n    if (!inputValue) {\n      setError('Event name must not be empty')\n    } else if (date.getTime() <= Date.now()) {\n      setError('You cannot select a date less than the current')\n    } else {\n      addEvent({\n        name: inputValue,\n        date,\n        isActive: true,\n        dateStart: new Date()\n      })\n      setError(null)\n      setInputValue('')\n    }\n  }\n\n  const handleChange = e => {\n    setInputValue(e.target.value)\n  }\n\n  return (\n    <Styled.Form onSubmit={handleAdd}>\n      <Styled.Input\n        placeholder=\"Write event name that you wait\"\n        value={inputValue}\n        onChange={handleChange}\n      />\n      {error && <Styled.WarningMessage>{error}</Styled.WarningMessage>}\n      <Styled.DatePicker>\n        <DatePicker\n          selected={date}\n          onChange={date => setDate(date)}\n          timeInputLabel=\"Time:\"\n          dateFormat=\"MM/dd/yyyy h:mm aa\"\n          showTimeInput\n        />\n      </Styled.DatePicker>\n      <Styled.Button type=\"submit\">start</Styled.Button>\n    </Styled.Form>\n  )\n}\n\nEventForm.propTypes = {\n  addEvent: PropTypes.func.isRequired\n}\n\nexport default EventForm\n","/* Import libraries */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n/* Import components */\nimport EventForm from '../components/EventForm/EventForm'\n\n/* Import others */\nimport { addEvent } from '../reducers/actions'\n\nconst EventFormContainer = ({ addEvent }) => {\n  return <EventForm addEvent={addEvent} />\n}\n\nEventFormContainer.propTypes = {\n  addEvent: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addEvent })(EventFormContainer)\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  left: 0;\n  right: 0;\n  z-index: 1;\n  padding: 18px 36px 18px 24px;\n  background: #fff;\n  box-shadow: 3px 3px 25px rgba(49, 49, 49, 0.15);\n  border-radius: 5px;\n`\n\nconst Text = styled.div`\n  font-size: 18px;\n  font-weight: 300;\n  color: #313131;\n`\n\nconst ButtonClose = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  z-index: 1;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  font-size: 24px;\n  color: #dc5858;\n  border: none;\n  background: none;\n  cursor: pointer;\n`\n\nexport const Styled = { Wrapper, Text, ButtonClose }\n","/* Import libraries */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\n/* Import others */\nimport { Styled } from './Message.styles'\n\nconst Message = ({ messages, deleteMessage }) => {\n  const { name, id, date } = messages[messages.length - 1]\n\n  const handleDelete = () => {\n    deleteMessage(id)\n  }\n\n  return (\n    <Styled.Wrapper>\n      <Styled.Text>\n        {name} event has happened on{' '}\n        {moment(date).format('MMMM Do YYYY, h:mm a')}.\n      </Styled.Text>\n      <Styled.ButtonClose type=\"button\" onClick={handleDelete}>\n        <i className=\"fas fa-times\" />\n      </Styled.ButtonClose>\n    </Styled.Wrapper>\n  )\n}\n\nMessage.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteMessage: PropTypes.func.isRequired\n}\n\nexport default Message\n","/* Import libraries */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\n/* Import components */\r\nimport Message from '../components/Message/Message'\r\n\r\n/* Import others */\r\nimport { deleteMessage } from '../reducers/actions'\r\n\r\nconst MessageContainer = ({ deleteMessage, ...props }) => {\r\n  return <Message deleteMessage={deleteMessage} {...props} />\r\n}\r\n\r\nMessageContainer.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteMessage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteMessage })(MessageContainer)\r\n","import styled from 'styled-components'\r\n\r\nconst Section = styled.div`\r\n  margin: 60px 0 0 0;\r\n`\r\n\r\nexport default Section\r\n","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  max-width: 1050px;\r\n  padding: 165px 53px;\r\n`\r\nconst Message = styled.div`\r\n  margin-top: 40px;\r\n  text-align: center;\r\n  font-size: 36px;\r\n  font-weight: 300;\r\n  color: #313131;\r\n`\r\n\r\nexport const Styled = {\r\n  Wrapper,\r\n  Message\r\n}\r\n","/* Import libraries */\nimport React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n/* Import components */\nimport Countdown from '../Countdown/Countdown'\nimport TableEventsContainer from '../../containers/TableEventsContainer'\nimport ModalEditContainer from '../../containers/ModalEditContainer'\nimport EventFormContainer from '../../containers/EventFormContainer'\nimport MessageContainer from '../../containers/MessageContainer'\nimport Section from '../UI/Section'\n\n/* Import others */\nimport { setEvents, setMessages } from '../../reducers/actions'\nimport { Styled } from './App.styles'\n\nconst App = ({ events, messages, setEvents, setMessages }) => {\n  const currentEvent = events.find(({ isActive }) => isActive)\n  const editableEvent = events.find(({ isEdit }) => isEdit)\n\n  useEffect(() => {\n    const eventsStorage = localStorage.getItem('events')\n    const messagesStorage = localStorage.getItem('messages')\n    if (eventsStorage) setEvents(JSON.parse(eventsStorage))\n    if (messagesStorage) setMessages(JSON.parse(messagesStorage))\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events))\n  }, [events])\n\n  useEffect(() => {\n    localStorage.setItem('messages', JSON.stringify(messages))\n  }, [messages])\n\n  return (\n    <Styled.Wrapper>\n      {!!messages.length && <MessageContainer messages={messages} />}\n      <EventFormContainer />\n      {!events.length && (\n        <Styled.Message>You are not waiting for a single event</Styled.Message>\n      )}\n      {!!events.length && (\n        <>\n          <Section>\n            <Countdown currentEvent={currentEvent} />\n          </Section>\n          <Section>\n            <TableEventsContainer />\n          </Section>\n        </>\n      )}\n      {editableEvent && <ModalEditContainer editableEvent={editableEvent} />}\n    </Styled.Wrapper>\n  )\n}\n\nApp.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setEvents: PropTypes.func.isRequired,\n  setMessages: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ events, messages }) => ({ events, messages })\n\nexport default connect(mapStateToProps, { setEvents, setMessages })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.scss'\nimport store from './store'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}